{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1d556eb12b241d778203d5a07fa5f805113b6558f005fda6799c251f279bc2ff",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "926594",
    "logsBloom": "0x
    "blockHash": "0xe22a57ec01879b4290c04431f4cb5eb5c1eb3ff39bbdfc79617bfcee8fbdc5f3",
    "transactionHash": "0x1d556eb12b241d778203d5a07fa5f805113b6558f005fda6799c251f279bc2ff",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "926594",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "1a442dfaad4a88d8fce057a65d01e7a1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FuneMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FuneMe.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"./PriceConvertor.sol\\\";\\r\\n\\r\\nerror FundMe__NotOwner(); //write the name of the contract before the error can help us to identify from where the error has generated\\r\\n\\r\\ncontract FundMe {\\r\\n    using PriceConvertor for uint256;\\r\\n\\r\\n    uint256 public constant MINIUSD = 50 * 10 ** 18;\\r\\n    address[] private funders;\\r\\n    mapping(address => uint256) private addressToAmount;\\r\\n    address private immutable i_owner; // write the immutable variable starting with i_\\r\\n\\r\\n    AggregatorV3Interface priceFeed;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address _address) {\\r\\n        i_owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(_address);\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(\\r\\n            msg.value.getConversionPrice(priceFeed) > MINIUSD,\\r\\n            \\\"Please enter sufficient amount\\\"\\r\\n        );\\r\\n        //address 0xA39434A63A52E749F02807ae27335515BA4b07F7\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmount[msg.sender] = msg.value;\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        for (uint256 i = 0; i < funders.length; i++) {\\r\\n            addressToAmount[funders[i]] = 0;\\r\\n        }\\r\\n        funders = new address[](0);\\r\\n        (bool success, ) = payable(i_owner).call{value: address(this).balance}(\\r\\n            \\\"\\\"\\r\\n        );\\r\\n        require(success, \\\"call failed\\\");\\r\\n    }\\r\\n\\r\\n    function getAddressToAmountFunded(\\r\\n        address fundingAddress\\r\\n    ) public view returns (uint256) {\\r\\n        return addressToAmount[fundingAddress];\\r\\n    }\\r\\n\\r\\n    function getVersion() public view returns (uint256) {\\r\\n        return priceFeed.version();\\r\\n    }\\r\\n\\r\\n    function getFunder(uint256 index) public view returns (address) {\\r\\n        return funders[index];\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return priceFeed;\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x28b6325038124c8c9328abdb9c6d4660e8ff9ad528ddd36a6c0c7b2aa1e6f6c7\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConvertor {\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n        //     0xA39434A63A52E749F02807ae27335515BA4b07F7\\r\\n        // );\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionPrice(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf30e9a09156da897d807b816591e8cb9e7299cd18ebe5f83e3bff569b335f250\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620010e1380380620010e18339818101604052810190620000379190620000cd565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600081519050620000c78162000138565b92915050565b600060208284031215620000e657620000e562000133565b5b6000620000f684828501620000b6565b91505092915050565b60006200010c8262000113565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014381620000ff565b81146200014f57600080fd5b50565b60805160601c610f626200017f600039600081816103f90152818161058601526106620152610f626000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101425780639e87a5cd1461016d578063b60d428814610198578063d7b4750c146101a25761008e565b80630343fb25146100985780630d8e6e2c146100d55780633ccfd60b146101005780634e44ba0d146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100bf60048036038101906100ba91906108e3565b610307565b6040516100cc9190610b06565b60405180910390f35b3480156100e157600080fd5b506100ea610350565b6040516100f79190610b06565b60405180910390f35b34801561010c57600080fd5b506101156103f7565b005b34801561012357600080fd5b5061012c610651565b6040516101399190610b06565b60405180910390f35b34801561014e57600080fd5b5061015761065e565b6040516101649190610a90565b60405180910390f35b34801561017957600080fd5b50610182610686565b60405161018f9190610aab565b60405180910390f35b6101a06101df565b005b3480156101ae57600080fd5b506101c960048036038101906101c49190610910565b6106b0565b6040516101d69190610a90565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106f790919063ffffffff16565b1161025e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025590610ac6565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ba57600080fd5b505afa1580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f2919061093d565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461047c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600080549050811015610521576000600160008084815481106104a5576104a4610e18565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061051990610d71565b91505061047f565b50600067ffffffffffffffff81111561053d5761053c610e47565b5b60405190808252806020026020018201604052801561056b5781602001602082028036833780820191505090505b50600090805190602001906105819291906107d3565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516105c890610a7b565b60006040518083038185875af1925050503d8060008114610605576040519150601f19603f3d011682016040523d82523d6000602084013e61060a565b606091505b505090508061064e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064590610ae6565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008082815481106106c5576106c4610e18565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061070383610733565b90506000670de0b6b3a7640000858361071c9190610c85565b6107269190610b3d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561077c57600080fd5b505afa158015610790573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b4919061096a565b5050509150506402540be400816107cb9190610b6e565b915050919050565b82805482825590600052602060002090810192821561084c579160200282015b8281111561084b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107f3565b5b509050610859919061085d565b5090565b5b8082111561087657600081600090555060010161085e565b5090565b60008135905061088981610ed0565b92915050565b60008151905061089e81610ee7565b92915050565b6000813590506108b381610efe565b92915050565b6000815190506108c881610efe565b92915050565b6000815190506108dd81610f15565b92915050565b6000602082840312156108f9576108f8610e76565b5b60006109078482850161087a565b91505092915050565b60006020828403121561092657610925610e76565b5b6000610934848285016108a4565b91505092915050565b60006020828403121561095357610952610e76565b5b6000610961848285016108b9565b91505092915050565b600080600080600060a0868803121561098657610985610e76565b5b6000610994888289016108ce565b95505060206109a58882890161088f565b94505060406109b6888289016108b9565b93505060606109c7888289016108b9565b92505060806109d8888289016108ce565b9150509295509295909350565b6109ee81610cdf565b82525050565b6109fd81610d3b565b82525050565b6000610a10601e83610b2c565b9150610a1b82610e7b565b602082019050919050565b6000610a33600b83610b2c565b9150610a3e82610ea4565b602082019050919050565b6000610a56600083610b21565b9150610a6182610ecd565b600082019050919050565b610a7581610d1b565b82525050565b6000610a8682610a49565b9150819050919050565b6000602082019050610aa560008301846109e5565b92915050565b6000602082019050610ac060008301846109f4565b92915050565b60006020820190508181036000830152610adf81610a03565b9050919050565b60006020820190508181036000830152610aff81610a26565b9050919050565b6000602082019050610b1b6000830184610a6c565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610b4882610d1b565b9150610b5383610d1b565b925082610b6357610b62610de9565b5b828204905092915050565b6000610b7982610cf1565b9150610b8483610cf1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610bc357610bc2610dba565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610c0057610bff610dba565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610c3d57610c3c610dba565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610c7a57610c79610dba565b5b828202905092915050565b6000610c9082610d1b565b9150610c9b83610d1b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cd457610cd3610dba565b5b828202905092915050565b6000610cea82610cfb565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610d4682610d4d565b9050919050565b6000610d5882610d5f565b9050919050565b6000610d6a82610cfb565b9050919050565b6000610d7c82610d1b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610daf57610dae610dba565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f506c6561736520656e7465722073756666696369656e7420616d6f756e740000600082015250565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b610ed981610cdf565b8114610ee457600080fd5b50565b610ef081610cf1565b8114610efb57600080fd5b50565b610f0781610d1b565b8114610f1257600080fd5b50565b610f1e81610d25565b8114610f2957600080fd5b5056fea26469706673582212207551c32f6748c53fb740066093ad317c4df06b2b39b991321389200f812cea7564736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101425780639e87a5cd1461016d578063b60d428814610198578063d7b4750c146101a25761008e565b80630343fb25146100985780630d8e6e2c146100d55780633ccfd60b146101005780634e44ba0d146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100bf60048036038101906100ba91906108e3565b610307565b6040516100cc9190610b06565b60405180910390f35b3480156100e157600080fd5b506100ea610350565b6040516100f79190610b06565b60405180910390f35b34801561010c57600080fd5b506101156103f7565b005b34801561012357600080fd5b5061012c610651565b6040516101399190610b06565b60405180910390f35b34801561014e57600080fd5b5061015761065e565b6040516101649190610a90565b60405180910390f35b34801561017957600080fd5b50610182610686565b60405161018f9190610aab565b60405180910390f35b6101a06101df565b005b3480156101ae57600080fd5b506101c960048036038101906101c49190610910565b6106b0565b6040516101d69190610a90565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106f790919063ffffffff16565b1161025e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025590610ac6565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ba57600080fd5b505afa1580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f2919061093d565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461047c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600080549050811015610521576000600160008084815481106104a5576104a4610e18565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061051990610d71565b91505061047f565b50600067ffffffffffffffff81111561053d5761053c610e47565b5b60405190808252806020026020018201604052801561056b5781602001602082028036833780820191505090505b50600090805190602001906105819291906107d3565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516105c890610a7b565b60006040518083038185875af1925050503d8060008114610605576040519150601f19603f3d011682016040523d82523d6000602084013e61060a565b606091505b505090508061064e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064590610ae6565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008082815481106106c5576106c4610e18565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061070383610733565b90506000670de0b6b3a7640000858361071c9190610c85565b6107269190610b3d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561077c57600080fd5b505afa158015610790573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b4919061096a565b5050509150506402540be400816107cb9190610b6e565b915050919050565b82805482825590600052602060002090810192821561084c579160200282015b8281111561084b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107f3565b5b509050610859919061085d565b5090565b5b8082111561087657600081600090555060010161085e565b5090565b60008135905061088981610ed0565b92915050565b60008151905061089e81610ee7565b92915050565b6000813590506108b381610efe565b92915050565b6000815190506108c881610efe565b92915050565b6000815190506108dd81610f15565b92915050565b6000602082840312156108f9576108f8610e76565b5b60006109078482850161087a565b91505092915050565b60006020828403121561092657610925610e76565b5b6000610934848285016108a4565b91505092915050565b60006020828403121561095357610952610e76565b5b6000610961848285016108b9565b91505092915050565b600080600080600060a0868803121561098657610985610e76565b5b6000610994888289016108ce565b95505060206109a58882890161088f565b94505060406109b6888289016108b9565b93505060606109c7888289016108b9565b92505060806109d8888289016108ce565b9150509295509295909350565b6109ee81610cdf565b82525050565b6109fd81610d3b565b82525050565b6000610a10601e83610b2c565b9150610a1b82610e7b565b602082019050919050565b6000610a33600b83610b2c565b9150610a3e82610ea4565b602082019050919050565b6000610a56600083610b21565b9150610a6182610ecd565b600082019050919050565b610a7581610d1b565b82525050565b6000610a8682610a49565b9150819050919050565b6000602082019050610aa560008301846109e5565b92915050565b6000602082019050610ac060008301846109f4565b92915050565b60006020820190508181036000830152610adf81610a03565b9050919050565b60006020820190508181036000830152610aff81610a26565b9050919050565b6000602082019050610b1b6000830184610a6c565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610b4882610d1b565b9150610b5383610d1b565b925082610b6357610b62610de9565b5b828204905092915050565b6000610b7982610cf1565b9150610b8483610cf1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610bc357610bc2610dba565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610c0057610bff610dba565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610c3d57610c3c610dba565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610c7a57610c79610dba565b5b828202905092915050565b6000610c9082610d1b565b9150610c9b83610d1b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cd457610cd3610dba565b5b828202905092915050565b6000610cea82610cfb565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610d4682610d4d565b9050919050565b6000610d5882610d5f565b9050919050565b6000610d6a82610cfb565b9050919050565b6000610d7c82610d1b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610daf57610dae610dba565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f506c6561736520656e7465722073756666696369656e7420616d6f756e740000600082015250565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b610ed981610cdf565b8114610ee457600080fd5b50565b610ef081610cf1565b8114610efb57600080fd5b50565b610f0781610d1b565b8114610f1257600080fd5b50565b610f1e81610d25565b8114610f2957600080fd5b5056fea26469706673582212207551c32f6748c53fb740066093ad317c4df06b2b39b991321389200f812cea7564736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FuneMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FuneMe.sol:FundMe",
        "label": "addressToAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FuneMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}